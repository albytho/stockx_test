{"ast":null,"code":"import _classCallCheck from \"/Users/Alby/Desktop/stockx_test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Alby/Desktop/stockx_test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Alby/Desktop/stockx_test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Alby/Desktop/stockx_test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Alby/Desktop/stockx_test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Alby/Desktop/stockx_test/src/Components/ImageGrid.js\";\nimport React, { Component } from 'react';\nimport Card from './Card.js';\nimport uuid from 'uuid';\nimport './ImageGrid.css';\n\nvar ImageGrid =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ImageGrid, _Component);\n\n  function ImageGrid() {\n    var _this;\n\n    _classCallCheck(this, ImageGrid);\n\n    //I'm having trouble coming up with a clever way of getting filenames\n    //For now, I hardcoded it\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageGrid).call(this));\n    _this.state = {\n      images: [{\n        id: uuid.v4(),\n        file_path: '1.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '2.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '3.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '4.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '5.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '6.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '7.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '8.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '9.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '10.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '11.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '12.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '13.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '14.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '15.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '16.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '17.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '18.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '19.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '20.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '21.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '22.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '23.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '24.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '25.jpg'\n      }],\n      rows_of_images: []\n    };\n    return _this;\n  }\n\n  _createClass(ImageGrid, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //Creates a list of lists\n      //Each element in rows_of_images is a list of images belonging to that row\n      var list = this.state.images;\n      var rows_of_images = [];\n      var images = [];\n\n      for (var i = 0, size = list.length; i < size; i++) {\n        var item = list[i];\n\n        if (i !== 0 && i % 5 === 0) {\n          rows_of_images.push(images);\n          images = [];\n          images.push(item);\n        } else {\n          images.push(item);\n        }\n      }\n\n      rows_of_images.push(images);\n      this.setState({\n        rows_of_images: rows_of_images\n      }, function () {\n        console.log(_this2.state.rows_of_images);\n      });\n    }\n  }, {\n    key: \"handleModal\",\n    value: function handleModal(id) {\n      console.log(\"IT WORKDSSSSS\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      //Uses the rows_of_images to dynamically create the row and column elemnts of the grid\n      var rows = this.state.rows_of_images.map(function (row_of_image) {\n        var row = row_of_image.map(function (image) {\n          var file_name = '/Images/' + image.file_path;\n          var id = image.id;\n          return React.createElement(\"div\", {\n            className: \"col\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }, \" \", React.createElement(Card, {\n            id: id,\n            image_name: file_name,\n            showModal: _this3.handleModal.bind(_this3),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }), \" \");\n        });\n        return React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, \" \", row, \" \");\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, rows));\n    }\n  }]);\n\n  return ImageGrid;\n}(Component);\n\nexport default ImageGrid;","map":{"version":3,"sources":["/Users/Alby/Desktop/stockx_test/src/Components/ImageGrid.js"],"names":["React","Component","Card","uuid","ImageGrid","state","images","id","v4","file_path","rows_of_images","list","i","size","length","item","push","setState","console","log","rows","map","row_of_image","row","image","file_name","handleModal","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Card from './Card.js'\nimport uuid from 'uuid';\nimport './ImageGrid.css';\n\nclass ImageGrid extends Component {\n\n\tconstructor(){\n\t\t//I'm having trouble coming up with a clever way of getting filenames\n\t\t//For now, I hardcoded it\n    super();\n    this.state = {\n    \timages: [\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '1.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '2.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '3.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '4.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '5.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '6.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '7.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '8.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '9.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '10.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '11.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '12.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '13.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '14.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '15.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '16.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '17.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '18.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '19.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '20.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '21.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '22.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '23.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '24.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '25.jpg',\n    \t\t}\n    \t],\n      rows_of_images:[]\n    }\n  }\n\n\tcomponentDidMount(){\n\t\t//Creates a list of lists\n\t\t//Each element in rows_of_images is a list of images belonging to that row\n\t\tlet list = this.state.images;\n\t\tlet rows_of_images = [];\n\t\tlet images = [];\n\t\tfor(var i = 0, size = list.length; i < size ; i++){\n\t\t\tvar item = list[i];\n\t\t\tif(i!==0 && i%5===0){\n\t\t\t\trows_of_images.push(images);\n\t\t\t\timages = [];\n\t\t\t\timages.push(item);\n\t\t\t}\n\t\t\telse{\n\t\t\t\timages.push(item);\n\t\t\t}\n\t\t}\n\t\trows_of_images.push(images);\n\n\t\tthis.setState({rows_of_images}, () => {\n\t\t\tconsole.log(this.state.rows_of_images)\n\t\t});\n\n\t}\n\n\thandleModal(id){\n\t\tconsole.log(\"IT WORKDSSSSS\");\n\t}\n\n  render() {\n  \t//Uses the rows_of_images to dynamically create the row and column elemnts of the grid\n\t\tlet rows = this.state.rows_of_images.map(row_of_image =>{\n\t\t\tlet row = row_of_image.map(image =>{\n\t\t\t\tlet file_name = '/Images/'+image.file_path;\n\t\t\t\tlet id = image.id;\n\t\t\t\treturn <div className=\"col\"> <Card id={id} image_name={file_name} showModal={this.handleModal.bind(this)}/> </div>\n\t\t\t});\n\n\t\t\treturn <div className=\"row\"> {row} </div>\n\t\t});\t\n\n    return (\n      <div>\n        <div className=\"container\">\n        \t{rows}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImageGrid;\n"]},"metadata":{},"sourceType":"module"}