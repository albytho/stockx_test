{"ast":null,"code":"import _classCallCheck from \"/Users/Alby/Desktop/stockx_test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Alby/Desktop/stockx_test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Alby/Desktop/stockx_test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Alby/Desktop/stockx_test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Alby/Desktop/stockx_test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Alby/Desktop/stockx_test/src/Components/ImageGrid.js\";\nimport React, { Component } from 'react';\nimport Card from './Card.js';\nimport uuid from 'uuid';\nimport Popup from \"reactjs-popup\";\nimport './ImageGrid.css';\n\nvar ImageGrid =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ImageGrid, _Component);\n\n  function ImageGrid() {\n    var _this;\n\n    _classCallCheck(this, ImageGrid);\n\n    //I'm having trouble coming up with a clever way of getting filenames\n    //For now, I hardcoded it\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageGrid).call(this));\n    _this.state = {\n      images: [{\n        id: uuid.v4(),\n        file_path: '1.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '2.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '3.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '4.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '5.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '6.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '7.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '8.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '9.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '10.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '11.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '12.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '13.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '14.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '15.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '16.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '17.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '18.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '19.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '20.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '21.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '22.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '23.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '24.jpg'\n      }, {\n        id: uuid.v4(),\n        file_path: '25.jpg'\n      }],\n      rows_of_images: [],\n      showPopUp: false,\n      currentID: 0\n    };\n    return _this;\n  }\n\n  _createClass(ImageGrid, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //Creates a list of lists\n      //Each element in rows_of_images is a list of images belonging to that row\n      var list = this.state.images;\n      var rows_of_images = [];\n      var images = [];\n\n      for (var i = 0, size = list.length; i < size; i++) {\n        var item = list[i];\n\n        if (i !== 0 && i % 5 === 0) {\n          rows_of_images.push(images);\n          images = [];\n          images.push(item);\n        } else {\n          images.push(item);\n        }\n      }\n\n      rows_of_images.push(images);\n      this.setState({\n        rows_of_images: rows_of_images\n      }, function () {\n        console.log(_this2.state.rows_of_images);\n      });\n    }\n  }, {\n    key: \"handleModal\",\n    value: function handleModal(id) {\n      this.setState({\n        showPopUp: true\n      });\n      this.setState({\n        currentID: id\n      });\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        showPopUp: false\n      });\n      this.setState({\n        currentID: 0\n      });\n    }\n  }, {\n    key: \"handleAdd\",\n    value: function handleAdd(id) {\n      console.log(id);\n    }\n  }, {\n    key: \"handleEdit\",\n    value: function handleEdit(id) {}\n  }, {\n    key: \"handleRemove\",\n    value: function handleRemove(id) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      //Uses the rows_of_images to dynamically create the row and column elemnts of the grid\n      var image_grid = this.state.rows_of_images.map(function (row_of_image) {\n        var row = row_of_image.map(function (image) {\n          var file_name = '/Images/' + image.file_path;\n          var id = image.id;\n          return React.createElement(\"div\", {\n            className: \"col\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176\n            },\n            __self: this\n          }, \" \", React.createElement(Card, {\n            id: id,\n            image_name: file_name,\n            showModal: _this3.handleModal.bind(_this3),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176\n            },\n            __self: this\n          }), \" \");\n        });\n        return React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, \" \", row, \" \");\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"brandInput\",\n        placeholder: \"Brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"styleInput\",\n        placeholder: \"Style\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"sizeInput\",\n        placeholder: \"Size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"upcidInput\",\n        placeholder: \"UPC ID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }))), image_grid), React.createElement(Popup, {\n        open: this.state.showPopUp,\n        onClose: this.handleClose.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"oidsjfoijds\", React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Item: \", this.state.currentID, \" \"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.handleAdd.bind(this, this.state.currentID),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Add\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-warning\",\n        onClick: this.handleEdit.bind(this, this.state.currentID),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        onClick: this.handleRemove.bind(this, this.state.currentID),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Remove\"))));\n    }\n  }]);\n\n  return ImageGrid;\n}(Component);\n\nexport default ImageGrid;","map":{"version":3,"sources":["/Users/Alby/Desktop/stockx_test/src/Components/ImageGrid.js"],"names":["React","Component","Card","uuid","Popup","ImageGrid","state","images","id","v4","file_path","rows_of_images","showPopUp","currentID","list","i","size","length","item","push","setState","console","log","image_grid","map","row_of_image","row","image","file_name","handleModal","bind","handleClose","handleAdd","handleEdit","handleRemove"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Card from './Card.js'\nimport uuid from 'uuid';\nimport Popup from \"reactjs-popup\";\nimport './ImageGrid.css';\n\nclass ImageGrid extends Component {\n\n\tconstructor(){\n\t\t//I'm having trouble coming up with a clever way of getting filenames\n\t\t//For now, I hardcoded it\n    super();\n    this.state = {\n    \timages: [\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '1.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '2.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '3.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '4.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '5.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '6.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '7.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '8.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '9.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '10.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '11.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '12.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '13.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '14.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '15.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '16.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '17.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '18.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '19.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '20.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '21.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '22.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '23.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '24.jpg',\n    \t\t},\n    \t\t{\n    \t\t\tid: uuid.v4(),\n        \tfile_path: '25.jpg',\n    \t\t}\n    \t],\n      rows_of_images:[],\n      showPopUp:false,\n      currentID:0\n    }\n  }\n\n\tcomponentDidMount(){\n\t\t//Creates a list of lists\n\t\t//Each element in rows_of_images is a list of images belonging to that row\n\t\tlet list = this.state.images;\n\t\tlet rows_of_images = [];\n\t\tlet images = [];\n\t\tfor(var i = 0, size = list.length; i < size ; i++){\n\t\t\tvar item = list[i];\n\t\t\tif(i!==0 && i%5===0){\n\t\t\t\trows_of_images.push(images);\n\t\t\t\timages = [];\n\t\t\t\timages.push(item);\n\t\t\t}\n\t\t\telse{\n\t\t\t\timages.push(item);\n\t\t\t}\n\t\t}\n\t\trows_of_images.push(images);\n\n\t\tthis.setState({rows_of_images}, () => {\n\t\t\tconsole.log(this.state.rows_of_images)\n\t\t});\n\n\t}\n\n\thandleModal(id){\n\t\tthis.setState({showPopUp:true});\n\t\tthis.setState({currentID:id});\n\t}\n\n\thandleClose(){\n\t\tthis.setState({showPopUp: false});\n\t\tthis.setState({currentID:0});\n\t}\n\n\thandleAdd(id){\n\t\tconsole.log(id)\n\t}\n\n\thandleEdit(id){\n\n\t}\n\n\thandleRemove(id){\n\n\t}\n\n\n  render() {\n  \t//Uses the rows_of_images to dynamically create the row and column elemnts of the grid\n\t\tlet image_grid = this.state.rows_of_images.map(row_of_image =>{\n\t\t\tlet row = row_of_image.map(image =>{\n\t\t\t\tlet file_name = '/Images/'+image.file_path;\n\t\t\t\tlet id = image.id;\n\t\t\t\treturn <div className=\"col\"> <Card id={id} image_name={file_name} showModal={this.handleModal.bind(this)}/> </div>\n\t\t\t});\n\n\t\t\treturn <div className=\"row\"> {row} </div>\n\t\t});\t\n\n    return (\n      <div>\n\n        <div className=\"container\">\n        \t<div className=\"row\">\n        \t\t<div className=\"col-sm\">\n        \t\t\t<input type=\"text\" className=\"form-control\" id=\"brandInput\" placeholder=\"Brand\"/>\n        \t\t</div>\n        \t\t<div className=\"col-sm\">\n        \t\t\t<input type=\"text\" className=\"form-control\" id=\"styleInput\" placeholder=\"Style\"/>\n        \t\t</div>\n        \t\t<div className=\"col-sm\">\n        \t\t\t<input type=\"text\" className=\"form-control\" id=\"sizeInput\" placeholder=\"Size\"/>\n        \t\t</div>\n        \t\t<div className=\"col-sm\">\n        \t\t\t<input type=\"text\" className=\"form-control\" id=\"upcidInput\" placeholder=\"UPC ID\"/>\n        \t\t</div>\n        \t</div>\n\n        \t{image_grid}\n        </div>\n\n        <Popup open={this.state.showPopUp} onClose={this.handleClose.bind(this)}>\n        \t<div className=\"content\">\n          oidsjfoijds\n            <h1>Item: {this.state.currentID} </h1>\n        \t\t<button type=\"button\" className=\"btn btn-primary\" onClick={this.handleAdd.bind(this,this.state.currentID)}>Add</button>\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={this.handleEdit.bind(this,this.state.currentID)}>Edit</button>\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={this.handleRemove.bind(this,this.state.currentID)}>Remove</button>\n        \t</div>\n\t\t\t  </Popup>\n\n      </div>\n    );\n  }\n}\n\nexport default ImageGrid;\n"]},"metadata":{},"sourceType":"module"}